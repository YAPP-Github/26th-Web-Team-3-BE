name: YAPP Server CI-CD Workflow - DEV

on:
  push:
    branches:
      - develop

  workflow_dispatch:
    inputs:
      reason:
        description: "Deployment reason (optional)"
        required: false
        default: "manual deploy"
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build
        run: |
          docker build . \
          --build-arg SPRING_PROFILE=dev \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGENAME }}:dev

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGENAME }}:dev

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy deployment files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./deployment/develop/"
          target: ~/
          overwrite: true

      - name: Copy Filebeat config to EC2 temp location
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./logging/develop/filebeat.yml"
          target: "~/filebeat.yml"
          overwrite: true

      - name: Run Blue-Green Switch Script on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGENAME }}:dev

            echo "Running switch script..."
            chmod +x ~/deployment/develop/switch-blue-green.sh
            bash ~/deployment/develop/switch-blue-green.sh

            echo "Moving and setting Filebeat configuration..."
            sudo mv ~/filebeat.yml /etc/filebeat/filebeat.yml
            sudo chown root:root /etc/filebeat/filebeat.yml
            sudo chmod 644 /etc/filebeat/filebeat.yml

            echo "Restarting Filebeat service..."
            sudo systemctl daemon-reload
            sudo systemctl restart filebeat

            echo "Cleaning up..."
            docker image prune -f
